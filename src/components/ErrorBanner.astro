---
interface Props {
  errorType?: string;
  message?: string;
}

const { errorType, message } = Astro.props;

// Error messages mapping
const errorMessages: Record<string, { title: string; message: string; icon: string }> = {
  'not-found': {
    title: 'No encontrado',
    message: message || 'El contenido que buscas no existe o ya no est√° disponible.',
    icon: 'üîç'
  },
  'server-error': {
    title: 'Error del servidor',
    message: message || 'Hubo un problema al cargar el contenido. Por favor, intenta nuevamente.',
    icon: '‚ö†Ô∏è'
  },
  'unauthorized': {
    title: 'No autorizado',
    message: message || 'No tienes permisos para acceder a este contenido.',
    icon: 'üîí'
  },
  'default': {
    title: 'Algo sali√≥ mal',
    message: message || 'Ocurri√≥ un error inesperado. Por favor, intenta nuevamente.',
    icon: '‚ùå'
  }
};

const error = errorMessages[errorType || ''] || errorMessages['default'];
---

<div
  class="error-banner bg-red-50 border-l-4 border-red-500 p-4 mb-6 rounded-r-lg shadow-sm"
  role="alert"
  aria-live="polite"
>
  <div class="flex items-start">
    <div class="flex-shrink-0 text-2xl mr-3">
      {error.icon}
    </div>
    <div class="flex-1">
      <h3 class="text-sm font-semibold text-red-800 mb-1">
        {error.title}
      </h3>
      <p class="text-sm text-red-700">
        {error.message}
      </p>
    </div>
    <button
      type="button"
      class="ml-3 flex-shrink-0 inline-flex text-red-400 hover:text-red-600 focus:outline-none transition"
      onclick="this.closest('.error-banner').remove()"
      aria-label="Cerrar mensaje de error"
    >
      <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
      </svg>
    </button>
  </div>
</div>

<style>
  .error-banner {
    animation: slideInFromTop 0.3s ease-out;
  }

  @keyframes slideInFromTop {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
