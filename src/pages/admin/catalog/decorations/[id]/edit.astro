---
import AdminLayout from '@/layouts/AdminLayout.astro';
import { getAdminAuth, requireAdmin } from '@/lib/auth';
import { createSupabaseClient } from '@/lib/supabase';

const auth = await getAdminAuth(Astro);
const user = requireAdmin(auth);

if (!user) {
  return Astro.redirect('/auth/login?redirect=/admin/catalog/decorations');
}

const supabase = createSupabaseClient(Astro);
const { id } = Astro.params;

// Get decoration data
const { data: decoration, error: decorationError } = await supabase
  .from('decorations')
  .select(`
    *,
    provider:providers(id, company_name, tier)
  `)
  .eq('id', id)
  .single();

if (decorationError || !decoration) {
  return Astro.redirect('/admin/catalog/decorations');
}

// Get providers that offer decorations (have "decoracion" category)
const { data: providers } = await supabase
  .from('providers')
  .select(`
    id,
    company_name,
    tier,
    provider_categories!inner(category_type)
  `)
  .eq('status', 'active')
  .eq('provider_categories.category_type', 'decoracion')
  .order('company_name');

// No sub-categories needed - decorations are already in 'decoracion' category

// Get features for the category
const { data: features } = await supabase
  .from('features')
  .select('*')
  .eq('is_active', true)
  .order('display_order');
---

<AdminLayout title="Editar Decoración" user={user}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Header -->
    <div class="mb-8">
      <div class="flex items-center justify-between">
        <div>
          <h1 class="text-2xl font-bold text-gray-900">Editar Decoración</h1>
          <p class="mt-1 text-sm text-gray-500">
            Modifique los detalles del producto de decoración
          </p>
        </div>
        <a
          href="/admin/catalog/decorations"
          class="bg-gray-100 text-gray-700 px-4 py-2 rounded-lg text-sm font-medium hover:bg-gray-200"
        >
          Volver al listado
        </a>
      </div>
    </div>

    <form id="decorationForm" class="space-y-8">
      <!-- Basic Information -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
          <h2 class="text-lg font-medium text-gray-900">Información Básica</h2>
        </div>
        <div class="px-6 py-4 space-y-4">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Proveedor <span class="text-red-500">*</span>
              </label>
              <select
                name="provider_id"
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              >
                {providers?.map((provider) => (
                  <option value={provider.id} selected={provider.id === decoration.provider_id}>
                    {provider.company_name}
                  </option>
                ))}
              </select>
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">
                Nombre del Producto <span class="text-red-500">*</span>
              </label>
              <input
                type="text"
                name="name"
                value={decoration.name}
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                placeholder="Ej: Panel Decorativo 3D"
              />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">
                SKU
              </label>
              <input
                type="text"
                name="sku"
                value={decoration.sku || ''}
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                placeholder="DEC-001"
              />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">
                Slug URL
              </label>
              <input
                type="text"
                name="slug"
                value={decoration.slug}
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                placeholder="panel-decorativo-3d"
              />
            </div>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700">
              Descripción Corta
            </label>
            <textarea
              name="description"
              rows="3"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              placeholder="Descripción breve del producto"
            >{decoration.description || ''}</textarea>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700">
              Descripción Detallada
            </label>
            <textarea
              name="description_long"
              rows="6"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              placeholder="Descripción completa con todas las características"
            >{decoration.description_long || ''}</textarea>
          </div>
        </div>
      </div>

      <!-- Pricing -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
          <h2 class="text-lg font-medium text-gray-900">Precios</h2>
        </div>
        <div class="px-6 py-4 space-y-4">
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Precio
              </label>
              <input
                type="number"
                name="price"
                value={decoration.price || ''}
                step="0.01"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                placeholder="50000"
              />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">
                Precio Oferta
              </label>
              <input
                type="number"
                name="price_opportunity"
                value={decoration.price_opportunity || ''}
                step="0.01"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                placeholder="45000"
              />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">
                Unidad de Medida
              </label>
              <input
                type="text"
                name="unit_measure"
                value={decoration.unit_measure || ''}
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                placeholder="m², unidad, kit"
              />
            </div>
          </div>
        </div>
      </div>

      <!-- Status -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
          <h2 class="text-lg font-medium text-gray-900">Estado y Visibilidad</h2>
        </div>
        <div class="px-6 py-4 space-y-4">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Estado
              </label>
              <select
                name="status"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              >
                <option value="draft" selected={decoration.status === 'draft'}>Borrador</option>
                <option value="pending_review" selected={decoration.status === 'pending_review'}>Pendiente de Revisión</option>
                <option value="active" selected={decoration.status === 'active'}>Activo</option>
                <option value="inactive" selected={decoration.status === 'inactive'}>Inactivo</option>
              </select>
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">
                Nivel
              </label>
              <select
                name="tier"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              >
                <option value="standard" selected={decoration.tier === 'standard'}>Standard</option>
                <option value="destacado" selected={decoration.tier === 'destacado'}>Destacado</option>
                <option value="premium" selected={decoration.tier === 'premium'}>Premium</option>
              </select>
            </div>
          </div>

          <div class="flex items-center space-x-4">
            <label class="flex items-center">
              <input
                type="checkbox"
                name="featured"
                checked={decoration.featured}
                class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-500 focus:ring-blue-500"
              />
              <span class="ml-2 text-sm text-gray-700">Destacado</span>
            </label>
          </div>
        </div>
      </div>

      <!-- Actions -->
      <div class="flex justify-end space-x-4">
        <a
          href="/admin/catalog/decorations"
          class="bg-gray-100 text-gray-700 px-6 py-2 rounded-lg text-sm font-medium hover:bg-gray-200"
        >
          Cancelar
        </a>
        <button
          type="button"
          onclick="saveDraft()"
          class="bg-gray-600 text-white px-6 py-2 rounded-lg text-sm font-medium hover:bg-gray-700"
        >
          Guardar como Borrador
        </button>
        <button
          type="submit"
          class="bg-blue-600 text-white px-6 py-2 rounded-lg text-sm font-medium hover:bg-blue-700"
        >
          Actualizar Decoración
        </button>
      </div>
    </form>
  </div>

  <script is:inline>
    // Auto-generate slug from name
    document.querySelector('input[name="name"]')?.addEventListener('input', (e) => {
      const slugInput = document.querySelector('input[name="slug"]');
      if (slugInput && !slugInput.dataset.manual) {
        const slug = e.target.value
          .toLowerCase()
          .replace(/[áàäâã]/g, 'a')
          .replace(/[éèëê]/g, 'e')
          .replace(/[íìïî]/g, 'i')
          .replace(/[óòöôõ]/g, 'o')
          .replace(/[úùüû]/g, 'u')
          .replace(/[ñ]/g, 'n')
          .replace(/[^a-z0-9]+/g, '-')
          .replace(/^-+|-+$/g, '');
        slugInput.value = slug;
      }
    });

    // Mark slug as manually edited
    document.querySelector('input[name="slug"]')?.addEventListener('input', (e) => {
      e.target.dataset.manual = 'true';
    });

    // Form submission
    document.getElementById('decorationForm')?.addEventListener('submit', async (e) => {
      e.preventDefault();

      const formData = new FormData(e.target);
      const data = Object.fromEntries(formData);

      // Convert checkbox
      data.featured = formData.has('featured');

      // Parse numeric fields
      ['price', 'price_opportunity'].forEach(field => {
        if (data[field] && data[field] !== '') {
          data[field] = parseFloat(data[field]);
        }
      });

      const decorationId = window.location.pathname.split('/').slice(-2)[0];

      try {
        const response = await fetch(`/api/admin/decorations/${decorationId}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        });

        if (response.ok) {
          window.location.href = '/admin/catalog/decorations';
        } else {
          const error = await response.json();
          alert('Error al actualizar la decoración: ' + error.error);
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error al actualizar la decoración');
      }
    });

    function saveDraft() {
      const form = document.getElementById('decorationForm');
      const statusSelect = form.querySelector('select[name="status"]');
      statusSelect.value = 'draft';
      form.dispatchEvent(new Event('submit'));
    }
  </script>
</AdminLayout>