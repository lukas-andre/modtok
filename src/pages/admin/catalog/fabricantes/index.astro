---
import AdminLayout from '@/layouts/AdminLayout.astro';
import { getAdminAuth, requireAdmin } from '@/lib/auth';
import { createSupabaseClient } from '@/lib/supabase';

const auth = await getAdminAuth(Astro);
const user = requireAdmin(auth);

if (!user) {
  return Astro.redirect('/auth/login?redirect=/admin/catalog/fabricantes');
}

const supabase = createSupabaseClient(Astro);

// Get all fabricantes with related info
const { data: fabricantes } = await supabase
  .from('providers')
  .select(`
    *,
    profile:profiles(full_name, email, avatar_url),
    approved_by_profile:profiles!providers_approved_by_fkey(full_name),
    created_by_profile:profiles!providers_created_by_fkey(full_name)
  `)
  .eq('category_type', 'fabricantes')
  .order('created_at', { ascending: false });

// Get regions for filter
const regions = [
  'Arica y Parinacota', 'Tarapacá', 'Antofagasta', 'Atacama', 'Coquimbo', 
  'Valparaíso', 'Metropolitana', 'O\'Higgins', 'Maule', 'Ñuble', 'Biobío', 
  'La Araucanía', 'Los Ríos', 'Los Lagos', 'Aysén', 'Magallanes'
];

// Get specialties for filter
const specialtyOptions = [
  'Tiny Houses', 'Casas Modulares Panel Sip', 'Casas Modulares Container', 
  'Casas Modulares Hormigón', 'Casas Modulares Madera', 'Casas Prefabricadas Madera', 
  'Oficinas Modulares Container'
];
---

<AdminLayout title="Catálogo de Fabricantes" user={user} currentPage="/admin/catalog/fabricantes">
  <div class="space-y-6">
    <!-- Header -->
    <div class="bg-white shadow-sm border-b">
      <div class="px-6 py-4">
        <div class="flex items-center justify-between">
          <div>
            <h1 class="text-2xl font-bold text-gray-900">Catálogo de Fabricantes</h1>
            <p class="mt-1 text-sm text-gray-500">
              Gestiona el catálogo completo de fabricantes y empresas constructoras
            </p>
          </div>
          <div class="flex items-center space-x-3">
            <button
              onclick="openBulkImport()"
              class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
            >
              <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
              </svg>
              Importar CSV
            </button>
            <a
              href="/admin/catalog/fabricantes/create"
              class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700"
            >
              <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
              </svg>
              Nuevo Fabricante
            </a>
          </div>
        </div>
      </div>
    </div>

    <!-- Filters -->
    <div class="bg-white rounded-lg shadow p-4">
      <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
        <div>
          <label class="block text-sm font-medium text-gray-700">Buscar</label>
          <input
            type="text"
            id="searchInput"
            placeholder="Nombre empresa, email, descripción..."
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
          />
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-700">Región</label>
          <select
            id="regionFilter"
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
          >
            <option value="">Todas</option>
            {regions.map(region => (
              <option value={region}>{region}</option>
            ))}
          </select>
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-700">Especialidad</label>
          <select
            id="specialtyFilter"
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
          >
            <option value="">Todas</option>
            {specialtyOptions.map(specialty => (
              <option value={specialty}>{specialty}</option>
            ))}
          </select>
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-700">Estado</label>
          <select
            id="statusFilter"
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
          >
            <option value="">Todos</option>
            <option value="active">Activo</option>
            <option value="inactive">Inactivo</option>
            <option value="draft">Borrador</option>
            <option value="pending_review">Pendiente Revisión</option>
            <option value="rejected">Rechazado</option>
          </select>
        </div>
      </div>
      
      <div class="mt-4 flex items-center justify-between">
        <div class="flex items-center space-x-2">
          <button
            onclick="applyFilters()"
            class="inline-flex items-center px-3 py-1.5 border border-transparent text-sm font-medium rounded text-white bg-blue-600 hover:bg-blue-700"
          >
            Aplicar Filtros
          </button>
          <button
            onclick="clearFilters()"
            class="inline-flex items-center px-3 py-1.5 border border-gray-300 text-sm font-medium rounded text-gray-700 bg-white hover:bg-gray-50"
          >
            Limpiar
          </button>
        </div>
        
        <div class="text-sm text-gray-500">
          {fabricantes?.length || 0} fabricantes encontrados
        </div>
      </div>
    </div>

    <!-- Data Table -->
    <div class="bg-white rounded-lg shadow overflow-hidden">
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th scope="col" class="w-12 px-6 py-3">
                <input type="checkbox" id="selectAll" class="rounded border-gray-300" />
              </th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Logo
              </th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Empresa
              </th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Contacto
              </th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Región
              </th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Experiencia
              </th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Rango Precios
              </th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Estado
              </th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Tier
              </th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Rating
              </th>
              <th scope="col" class="relative px-6 py-3">
                <span class="sr-only">Acciones</span>
              </th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            {fabricantes?.map((fabricante) => (
              <tr class="hover:bg-gray-50">
                <td class="px-6 py-4">
                  <input type="checkbox" value={fabricante.id} class="rounded border-gray-300 fabricante-checkbox" />
                </td>
                <td class="px-6 py-4">
                  {fabricante.logo_url ? (
                    <img 
                      src={fabricante.logo_url} 
                      alt={fabricante.company_name}
                      class="h-12 w-12 rounded-lg object-cover"
                    />
                  ) : (
                    <div class="h-12 w-12 rounded-lg bg-gray-200 flex items-center justify-center">
                      <svg class="h-6 w-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                      </svg>
                    </div>
                  )}
                </td>
                <td class="px-6 py-4">
                  <div>
                    <div class="text-sm font-medium text-gray-900">{fabricante.company_name}</div>
                    <div class="text-sm text-gray-500">{fabricante.slug}</div>
                    {fabricante.specialties && fabricante.specialties.length > 0 && (
                      <div class="text-xs text-gray-400 mt-1">
                        {fabricante.specialties.slice(0, 2).join(', ')}
                        {fabricante.specialties.length > 2 && '...'}
                      </div>
                    )}
                  </div>
                </td>
                <td class="px-6 py-4">
                  <div>
                    <div class="text-sm text-gray-900">{fabricante.email}</div>
                    <div class="text-sm text-gray-500">{fabricante.phone}</div>
                    {fabricante.whatsapp && (
                      <div class="text-xs text-green-600">WhatsApp: {fabricante.whatsapp}</div>
                    )}
                  </div>
                </td>
                <td class="px-6 py-4 text-sm text-gray-900">
                  <div>
                    <div>{fabricante.region || 'No especificada'}</div>
                    {fabricante.city && (
                      <div class="text-xs text-gray-500">{fabricante.city}</div>
                    )}
                  </div>
                </td>
                <td class="px-6 py-4 text-sm text-gray-900">
                  <div class="flex items-center">
                    {fabricante.years_experience ? (
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                        {fabricante.years_experience} años
                      </span>
                    ) : (
                      <span class="text-gray-400">N/A</span>
                    )}
                  </div>
                </td>
                <td class="px-6 py-4">
                  <div class="text-sm text-gray-900">
                    {fabricante.price_range_min && fabricante.price_range_max ? (
                      <div>
                        <div class="font-medium">
                          ${fabricante.price_range_min.toLocaleString('es-CL')} - ${fabricante.price_range_max.toLocaleString('es-CL')}
                        </div>
                        {fabricante.price_per_m2_min && fabricante.price_per_m2_max && (
                          <div class="text-xs text-gray-500">
                            ${fabricante.price_per_m2_min.toLocaleString('es-CL')} - ${fabricante.price_per_m2_max.toLocaleString('es-CL')}/m²
                          </div>
                        )}
                      </div>
                    ) : (
                      <span class="text-gray-400">No especificado</span>
                    )}
                  </div>
                </td>
                <td class="px-6 py-4">
                  <span class={`inline-flex px-2 text-xs font-semibold rounded-full ${
                    fabricante.status === 'active' ? 'bg-green-100 text-green-800' :
                    fabricante.status === 'inactive' ? 'bg-gray-100 text-gray-800' :
                    fabricante.status === 'draft' ? 'bg-yellow-100 text-yellow-800' :
                    fabricante.status === 'pending_review' ? 'bg-blue-100 text-blue-800' :
                    'bg-red-100 text-red-800'
                  }`}>
                    {fabricante.status}
                  </span>
                </td>
                <td class="px-6 py-4">
                  <span class={`inline-flex px-2 text-xs font-semibold rounded-full ${
                    fabricante.tier === 'premium' ? 'bg-purple-100 text-purple-800' :
                    fabricante.tier === 'destacado' ? 'bg-blue-100 text-blue-800' :
                    'bg-gray-100 text-gray-800'
                  }`}>
                    {fabricante.tier}
                  </span>
                </td>
                <td class="px-6 py-4">
                  <div class="flex items-center">
                    {fabricante.internal_rating ? (
                      <div class="flex items-center">
                        {[...Array(5)].map((_, i) => (
                          <svg                            
                            class={`h-4 w-4 ${
                              i < fabricante?.internal_rating! ? 'text-yellow-400' : 'text-gray-300'
                            }`}
                            fill="currentColor"
                            viewBox="0 0 20 20"
                          >
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                          </svg>
                        ))}
                        <span class="ml-1 text-sm text-gray-600">{fabricante.internal_rating}</span>
                      </div>
                    ) : (
                      <span class="text-gray-400 text-sm">Sin rating</span>
                    )}
                  </div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                  <div class="flex items-center justify-end space-x-2">
                    <a
                      href={`/fabricantes/${fabricante.slug}`}
                      target="_blank"
                      class="text-gray-400 hover:text-gray-500"
                      title="Ver en sitio"
                    >
                      <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                      </svg>
                    </a>
                    <a
                      href={`/admin/catalog/fabricantes/${fabricante.id}/edit`}
                      class="text-blue-600 hover:text-blue-900"
                      title="Editar"
                    >
                      <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                      </svg>
                    </a>
                    <button
                      onclick={`duplicateFabricante('${fabricante.id}')`}
                      class="text-gray-400 hover:text-gray-500"
                      title="Duplicar"
                    >
                      <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2" />
                      </svg>
                    </button>
                    <button
                      onclick={`deleteFabricante('${fabricante.id}')`}
                      class="text-red-600 hover:text-red-900"
                      title="Eliminar"
                    >
                      <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                      </svg>
                    </button>
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
      
      <!-- Pagination -->
      <div class="px-6 py-4 border-t border-gray-200">
        <div class="flex items-center justify-between">
          <div class="text-sm text-gray-700">
            Mostrando <span class="font-medium">1</span> a <span class="font-medium">10</span> de{' '}
            <span class="font-medium">{fabricantes?.length || 0}</span> resultados
          </div>
          <div class="flex items-center space-x-2">
            <button class="px-3 py-1 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
              Anterior
            </button>
            <button class="px-3 py-1 border border-blue-600 rounded-md text-sm font-medium text-white bg-blue-600">
              1
            </button>
            <button class="px-3 py-1 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
              2
            </button>
            <button class="px-3 py-1 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
              3
            </button>
            <button class="px-3 py-1 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
              Siguiente
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Bulk Actions -->
    <div id="bulkActions" class="hidden bg-white rounded-lg shadow p-4">
      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-4">
          <span class="text-sm text-gray-700">
            <span id="selectedCount">0</span> fabricantes seleccionados
          </span>
          <button
            onclick="bulkApprove()"
            class="inline-flex items-center px-3 py-1.5 border border-green-300 text-sm font-medium rounded text-green-700 bg-white hover:bg-green-50"
          >
            Aprobar
          </button>
          <button
            onclick="bulkUpdateStatus()"
            class="inline-flex items-center px-3 py-1.5 border border-gray-300 text-sm font-medium rounded text-gray-700 bg-white hover:bg-gray-50"
          >
            Cambiar Estado
          </button>
          <button
            onclick="bulkUpdateTier()"
            class="inline-flex items-center px-3 py-1.5 border border-gray-300 text-sm font-medium rounded text-gray-700 bg-white hover:bg-gray-50"
          >
            Cambiar Tier
          </button>
          <button
            onclick="bulkDelete()"
            class="inline-flex items-center px-3 py-1.5 border border-red-300 text-sm font-medium rounded text-red-700 bg-white hover:bg-red-50"
          >
            Eliminar
          </button>
        </div>
        <button
          onclick="exportSelected()"
          class="inline-flex items-center px-3 py-1.5 border border-gray-300 text-sm font-medium rounded text-gray-700 bg-white hover:bg-gray-50"
        >
          <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
          </svg>
          Exportar Seleccionados
        </button>
      </div>
    </div>
  </div>

  <script is:inline>
    // Initialize filters
    let selectedFabricantes = new Set();

    // Select all checkbox
    document.getElementById('selectAll')?.addEventListener('change', (e) => {
      const checkboxes = document.querySelectorAll('.fabricante-checkbox');
      checkboxes.forEach(cb => {
        cb.checked = e.target.checked;
        if (e.target.checked) {
          selectedFabricantes.add(cb.value);
        } else {
          selectedFabricantes.clear();
        }
      });
      updateBulkActions();
    });

    // Individual checkboxes
    document.querySelectorAll('.fabricante-checkbox').forEach(cb => {
      cb.addEventListener('change', (e) => {
        if (e.target.checked) {
          selectedFabricantes.add(e.target.value);
        } else {
          selectedFabricantes.delete(e.target.value);
        }
        updateBulkActions();
      });
    });

    function updateBulkActions() {
      const bulkActions = document.getElementById('bulkActions');
      const selectedCount = document.getElementById('selectedCount');
      
      if (selectedFabricantes.size > 0) {
        bulkActions?.classList.remove('hidden');
        if (selectedCount) selectedCount.textContent = selectedFabricantes.size;
      } else {
        bulkActions?.classList.add('hidden');
      }
    }

    function applyFilters() {
      // Implement filter logic
      console.log('Applying filters...');
    }

    function clearFilters() {
      document.getElementById('searchInput').value = '';
      document.getElementById('regionFilter').value = '';
      document.getElementById('specialtyFilter').value = '';
      document.getElementById('statusFilter').value = '';
    }

    async function deleteFabricante(id) {
      if (!confirm('¿Está seguro de eliminar este fabricante?')) return;
      
      try {
        const response = await fetch(`/api/admin/fabricantes/${id}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json'
          }
        });
        
        if (response.ok) {
          window.location.reload();
        } else {
          alert('Error al eliminar el fabricante');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error al eliminar el fabricante');
      }
    }

    async function duplicateFabricante(id) {
      if (!confirm('¿Desea duplicar este fabricante?')) return;
      
      try {
        const response = await fetch(`/api/admin/fabricantes/${id}/duplicate`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        });
        
        if (response.ok) {
          window.location.reload();
        } else {
          alert('Error al duplicar el fabricante');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error al duplicar el fabricante');
      }
    }

    function openBulkImport() {
      // Open bulk import modal
      window.location.href = '/admin/catalog/fabricantes/import';
    }

    async function bulkApprove() {
      if (!confirm(`¿Está seguro de aprobar ${selectedFabricantes.size} fabricantes?`)) return;
      
      try {
        const response = await fetch('/api/admin/fabricantes', {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            action: 'approve',
            fabricante_ids: Array.from(selectedFabricantes)
          })
        });
        
        if (response.ok) {
          window.location.reload();
        } else {
          alert('Error al aprobar fabricantes');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error al aprobar fabricantes');
      }
    }

    async function bulkUpdateStatus() {
      const newStatus = prompt('Ingrese el nuevo estado (active, inactive, draft, pending_review, rejected):');
      if (!newStatus) return;
      
      try {
        const response = await fetch('/api/admin/fabricantes', {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            action: 'change_status',
            fabricante_ids: Array.from(selectedFabricantes),
            data: { status: newStatus }
          })
        });
        
        if (response.ok) {
          window.location.reload();
        } else {
          alert('Error al actualizar estado');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error al actualizar estado');
      }
    }

    async function bulkUpdateTier() {
      const newTier = prompt('Ingrese el nuevo tier (premium, destacado, standard):');
      if (!newTier) return;
      
      try {
        const response = await fetch('/api/admin/fabricantes', {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            action: 'change_tier',
            fabricante_ids: Array.from(selectedFabricantes),
            data: { tier: newTier }
          })
        });
        
        if (response.ok) {
          window.location.reload();
        } else {
          alert('Error al actualizar tier');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error al actualizar tier');
      }
    }

    async function bulkDelete() {
      if (!confirm(`¿Está seguro de eliminar ${selectedFabricantes.size} fabricantes?`)) return;
      
      try {
        const response = await fetch('/api/admin/fabricantes', {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            fabricante_ids: Array.from(selectedFabricantes)
          })
        });
        
        if (response.ok) {
          window.location.reload();
        } else {
          alert('Error al eliminar fabricantes');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error al eliminar fabricantes');
      }
    }

    function exportSelected() {
      // Implement export functionality
      console.log('Exporting:', Array.from(selectedFabricantes));
    }
  </script>
</AdminLayout>