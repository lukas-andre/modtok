---
import AdminLayout from '@/layouts/AdminLayout.astro';
import { getAdminAuth, requireAdmin } from '@/lib/auth';
import { createSupabaseClient } from '@/lib/supabase';

const auth = await getAdminAuth(Astro);
const user = requireAdmin(auth);

if (!user) {
  return Astro.redirect('/auth/login?redirect=/admin/catalog/services/create');
}

const supabase = createSupabaseClient(Astro);

// Get providers for dropdown
const { data: providers } = await supabase
  .from('providers')
  .select('id, company_name')
  .eq('category_type', 'habilitacion_servicios')
  .eq('status', 'active')
  .order('company_name');

// Get categories for services
const { data: categories } = await supabase
  .from('categories')
  .select('*')
  .eq('type', 'habilitacion_servicios')
  .order('display_order');

// Get features for services
const { data: features } = await supabase
  .from('features')
  .select('*')
  .in('category_id', categories?.map(c => c.id) || [])
  .eq('is_active', true)
  .order('display_order');

// Service types
const serviceTypes = [
  { value: 'Agua y Saneamiento', label: 'Agua y Saneamiento' },
  { value: 'Energía Solar', label: 'Energía Solar' },
  { value: 'Energía Eléctrica', label: 'Energía Eléctrica' },
  { value: 'Construcción', label: 'Construcción' },
  { value: 'Calefacción', label: 'Calefacción' },
  { value: 'Aislamiento', label: 'Aislamiento' },
  { value: 'Pisos y Revestimientos', label: 'Pisos y Revestimientos' },
  { value: 'Seguridad', label: 'Seguridad' },
  { value: 'Telecomunicaciones', label: 'Telecomunicaciones' },
  { value: 'Paisajismo', label: 'Paisajismo' },
  { value: 'Otros', label: 'Otros' }
];

// Coverage areas (Chilean regions)
const regions = [
  'Región Metropolitana',
  'Valparaíso',
  'Biobío',
  'La Araucanía',
  'Los Lagos',
  'Los Ríos',
  'Maule',
  'Ñuble',
  "O'Higgins",
  'Coquimbo',
  'Atacama',
  'Antofagasta',
  'Tarapacá',
  'Arica y Parinacota',
  'Aysén',
  'Magallanes'
];
---

<AdminLayout title="Nuevo Servicio" user={user}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Header -->
    <div class="mb-8">
      <div class="flex items-center justify-between">
        <div>
          <h1 class="text-2xl font-bold text-gray-900">Nuevo Servicio</h1>
          <p class="mt-1 text-sm text-gray-500">
            Agregue un nuevo servicio al catálogo
          </p>
        </div>
        <a
          href="/admin/catalog/services"
          class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
        >
          <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
          </svg>
          Volver al listado
        </a>
      </div>
    </div>

    <form id="serviceForm" class="space-y-8">
      <!-- Basic Information -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
          <h2 class="text-lg font-medium text-gray-900">Información Básica</h2>
        </div>
        <div class="px-6 py-4 space-y-4">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Nombre del Servicio <span class="text-red-500">*</span>
              </label>
              <input
                type="text"
                name="name"
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                placeholder="Ej: Instalación de Paneles Solares"
              />
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Slug URL
              </label>
              <input
                type="text"
                name="slug"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                placeholder="instalacion-paneles-solares (se genera automáticamente)"
              />
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700">
                SKU / Código
              </label>
              <input
                type="text"
                name="sku"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                placeholder="SERV-001"
              />
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Proveedor <span class="text-red-500">*</span>
              </label>
              <select
                name="provider_id"
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              >
                <option value="">Seleccionar proveedor</option>
                {providers?.map(provider => (
                  <option value={provider.id}>{provider.company_name}</option>
                ))}
              </select>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Tipo de Servicio <span class="text-red-500">*</span>
              </label>
              <select
                name="service_type"
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              >
                <option value="">Seleccionar tipo</option>
                {serviceTypes.map(type => (
                  <option value={type.value}>{type.label}</option>
                ))}
              </select>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Categoría
              </label>
              <select
                name="category_id"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              >
                <option value="">Seleccionar categoría</option>
                {categories?.map(category => (
                  <option value={category.id}>{category.name}</option>
                ))}
              </select>
            </div>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700">
              Descripción Corta
            </label>
            <textarea
              name="description"
              rows="2"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              placeholder="Descripción breve para cards y listados"
            ></textarea>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700">
              Descripción Completa
            </label>
            <textarea
              name="description_long"
              rows="4"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              placeholder="Descripción detallada del servicio, proceso, incluye, etc."
            ></textarea>
          </div>
        </div>
      </div>

      <!-- Pricing & Availability -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
          <h2 class="text-lg font-medium text-gray-900">Precio y Disponibilidad</h2>
        </div>
        <div class="px-6 py-4 space-y-4">
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Precio Desde (CLP)
              </label>
              <input
                type="number"
                name="price_from"
                min="0"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                placeholder="Precio mínimo"
              />
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Precio Hasta (CLP)
              </label>
              <input
                type="number"
                name="price_to"
                min="0"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                placeholder="Precio máximo"
              />
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Unidad de Precio
              </label>
              <select
                name="price_unit"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              >
                <option value="">Seleccionar unidad</option>
                <option value="per_project">Por proyecto</option>
                <option value="per_m2">Por m²</option>
                <option value="per_hour">Por hora</option>
                <option value="per_day">Por día</option>
                <option value="per_unit">Por unidad</option>
                <option value="per_visit">Por visita</option>
                <option value="monthly">Mensual</option>
                <option value="annual">Anual</option>
              </select>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Máximo de Reservas
              </label>
              <input
                type="number"
                name="max_bookings"
                min="0"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
                placeholder="Sin límite si está vacío"
              />
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Reservas Actuales
              </label>
              <input
                type="number"
                name="current_bookings"
                min="0"
                value="0"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              />
            </div>
            
            <div class="flex items-center pt-6">
              <input
                type="checkbox"
                name="is_available"
                id="is_available"
                checked
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="is_available" class="ml-2 block text-sm text-gray-900">
                Servicio Disponible
              </label>
            </div>
          </div>
        </div>
      </div>

      <!-- Coverage Areas -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
          <h2 class="text-lg font-medium text-gray-900">Áreas de Cobertura</h2>
        </div>
        <div class="px-6 py-4">
          <label class="block text-sm font-medium text-gray-700 mb-2">
            Regiones donde se ofrece el servicio
          </label>
          <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2">
            {regions.map(region => (
              <div class="flex items-center">
                <input
                  type="checkbox"
                  name={`coverage_${region}`}
                  id={`coverage_${region}`}
                  value={region}
                  class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                />
                <label for={`coverage_${region}`} class="ml-2 block text-sm text-gray-900">
                  {region}
                </label>
              </div>
            ))}
          </div>
        </div>
      </div>

      <!-- Specifications -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
          <h2 class="text-lg font-medium text-gray-900">Especificaciones del Servicio</h2>
        </div>
        <div class="px-6 py-4">
          <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center">
            <p class="text-sm text-gray-500">Especificaciones (funcionalidad próximamente)</p>
          </div>
        </div>
      </div>

      <!-- Features & Characteristics -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
          <h2 class="text-lg font-medium text-gray-900">Características</h2>
        </div>
        <div class="px-6 py-4">
          <label class="block text-sm font-medium text-gray-700 mb-2">
            Características del Servicio
          </label>
          <div class="grid grid-cols-2 md:grid-cols-3 gap-2">
            {features?.map((feature: any) => (
              <div class="flex items-center">
                <input
                  type="checkbox"
                  name={`feature_${feature.slug}`}
                  id={`feature_${feature.slug}`}
                  class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                />
                <label for={`feature_${feature.slug}`} class="ml-2 block text-sm text-gray-900">
                  {feature.name}
                </label>
              </div>
            ))}
          </div>
        </div>
      </div>

      <!-- Images Gallery -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
          <h2 class="text-lg font-medium text-gray-900">Galería de Imágenes</h2>
        </div>
        <div class="px-6 py-4">
          <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center">
            <p class="text-sm text-gray-500">Galería de imágenes (funcionalidad próximamente)</p>
          </div>
        </div>
      </div>

      <!-- SEO & Status -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
          <h2 class="text-lg font-medium text-gray-900">SEO y Estado</h2>
        </div>
        <div class="px-6 py-4 space-y-4">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Estado <span class="text-red-500">*</span>
              </label>
              <select
                name="status"
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              >
                <option value="draft">Borrador</option>
                <option value="pending_review">Pendiente Revisión</option>
                <option value="active">Activo</option>
                <option value="inactive">Inactivo</option>
              </select>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700">
                Tier
              </label>
              <select
                name="tier"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              >
                <option value="standard">Standard</option>
                <option value="destacado">Destacado</option>
                <option value="premium">Premium</option>
              </select>
            </div>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700">
              Meta Title
            </label>
            <input
              type="text"
              name="meta_title"
              maxlength="60"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
            />
            <p class="mt-1 text-sm text-gray-500">Máximo 60 caracteres</p>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700">
              Meta Description
            </label>
            <textarea
              name="meta_description"
              rows="2"
              maxlength="160"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
            ></textarea>
            <p class="mt-1 text-sm text-gray-500">Máximo 160 caracteres</p>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700">
              Keywords
            </label>
            <input
              type="text"
              name="keywords"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm"
              placeholder="paneles solares, energía renovable, instalación (separadas por comas)"
            />
          </div>
        </div>
      </div>

      <!-- Form Actions -->
      <div class="flex justify-end space-x-3">
        <button
          type="button"
          onclick="saveDraft()"
          class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
        >
          Guardar Borrador
        </button>
        <button
          type="submit"
          class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700"
        >
          Crear Servicio
        </button>
      </div>
    </form>
  </div>


  <script is:inline>
    // Auto-generate slug from name
    document.querySelector('input[name="name"]')?.addEventListener('input', (e) => {
      const slugInput = document.querySelector('input[name="slug"]');
      if (slugInput && !slugInput.value) {
        const slug = e.target.value
          .toLowerCase()
          .replace(/[áàäâã]/g, 'a')
          .replace(/[éèëê]/g, 'e')
          .replace(/[íìïî]/g, 'i')
          .replace(/[óòöôõ]/g, 'o')
          .replace(/[úùüû]/g, 'u')
          .replace(/[ñ]/g, 'n')
          .replace(/[^a-z0-9]+/g, '-')
          .replace(/^-+|-+$/g, '');
        slugInput.value = slug;
      }
    });

    // Form submission
    document.getElementById('serviceForm')?.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(e.target);
      const data = Object.fromEntries(formData);
      
      // Convert checkbox to boolean
      data.is_available = formData.has('is_available');
      
      // Collect coverage areas
      const coverageAreas = [];
      formData.forEach((value, key) => {
        if (key.startsWith('coverage_')) {
          coverageAreas.push(value);
        }
      });
      data.coverage_areas = coverageAreas;
      
      // Collect features
      const features = {};
      formData.forEach((_, key) => {
        if (key.startsWith('feature_')) {
          features[key.replace('feature_', '')] = true;
        }
      });
      data.features = features;
      
      // Clean up data object
      Object.keys(data).forEach(key => {
        if (key.startsWith('coverage_') || key.startsWith('feature_')) {
          delete data[key];
        }
      });
      
      // Add images and specifications from React components
      // These would be collected from the React component state
      
      try {
        const response = await fetch('/api/admin/services', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        });
        
        if (response.ok) {
          const result = await response.json();
          window.location.href = `/admin/catalog/services/${result.id}/edit`;
        } else {
          const error = await response.json();
          alert('Error al crear el servicio: ' + error.error);
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error al crear el servicio');
      }
    });

    function saveDraft() {
      const form = document.getElementById('serviceForm');
      const statusSelect = form.querySelector('select[name="status"]');
      statusSelect.value = 'draft';
      form.dispatchEvent(new Event('submit'));
    }
  </script>
</AdminLayout>