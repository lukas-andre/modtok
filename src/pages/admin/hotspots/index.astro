---
import AdminLayout from '@/layouts/AdminLayout.astro';
import { getAdminAuth, requireAdmin } from '@/lib/auth';
import { createSupabaseClient } from '@/lib/supabase';

const auth = await getAdminAuth(Astro);
const user = requireAdmin(auth);

if (!user) {
  return Astro.redirect('/auth/login?redirect=/admin/hotspots');
}

const supabase = createSupabaseClient(Astro);

// Get hotspots with counts
const { data: hotspots } = await supabase
  .from('hotspots')
  .select(`
    *,
    hotspot_providers!inner(count),
    hotspot_features!inner(count)
  `)
  .order('created_at', { ascending: false });

// Get statistics
const { data: stats } = await supabase
  .from('hotspots')
  .select('id, status')
  .then(result => {
    const total = result.data?.length || 0;
    const published = result.data?.filter(h => h.status === 'published').length || 0;
    const draft = result.data?.filter(h => h.status === 'draft').length || 0;
    return {
      total,
      published,
      draft
    };
  });
---

<AdminLayout title="Gestión de Hotspots" user={user}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Header -->
    <div class="mb-8">
      <div class="flex items-center justify-between">
        <div>
          <h1 class="text-2xl font-bold text-gray-900">Gestión de Hotspots</h1>
          <p class="mt-1 text-sm text-gray-500">
            Administra las ubicaciones destacadas de construcción modular
          </p>
        </div>
        <div class="flex space-x-3">
          <a
            href="/admin/hotspots/create"
            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
          >
            <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
            </svg>
            Nuevo Hotspot
          </a>
        </div>
      </div>
    </div>

    <!-- Statistics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
      <div class="bg-white overflow-hidden shadow rounded-lg">
        <div class="p-5">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="h-6 w-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
              </svg>
            </div>
            <div class="ml-5 w-0 flex-1">
              <dl>
                <dt class="text-sm font-medium text-gray-500 truncate">Total Hotspots</dt>
                <dd class="text-lg font-medium text-gray-900">{stats?.total || 0}</dd>
              </dl>
            </div>
          </div>
        </div>
      </div>

      <div class="bg-white overflow-hidden shadow rounded-lg">
        <div class="p-5">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="h-6 w-6 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <div class="ml-5 w-0 flex-1">
              <dl>
                <dt class="text-sm font-medium text-gray-500 truncate">Publicados</dt>
                <dd class="text-lg font-medium text-gray-900">{stats?.published || 0}</dd>
              </dl>
            </div>
          </div>
        </div>
      </div>

      <div class="bg-white overflow-hidden shadow rounded-lg">
        <div class="p-5">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="h-6 w-6 text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <div class="ml-5 w-0 flex-1">
              <dl>
                <dt class="text-sm font-medium text-gray-500 truncate">Borradores</dt>
                <dd class="text-lg font-medium text-gray-900">{stats?.draft || 0}</dd>
              </dl>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Filters and Search -->
    <div class="bg-white shadow rounded-lg mb-6">
      <div class="px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-medium text-gray-900">Filtros</h3>
      </div>
      <div class="px-6 py-4">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
          <div>
            <label class="block text-sm font-medium text-gray-700">Buscar</label>
            <input
              type="text"
              id="searchInput"
              class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
              placeholder="Nombre, ciudad, región..."
            />
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700">Estado</label>
            <select id="statusFilter" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
              <option value="">Todos</option>
              <option value="published">Publicado</option>
              <option value="draft">Borrador</option>
              <option value="archived">Archivado</option>
            </select>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700">Región</label>
            <select id="regionFilter" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
              <option value="">Todas las regiones</option>
              <option value="Metropolitana">Metropolitana</option>
              <option value="Valparaíso">Valparaíso</option>
              <option value="O'Higgins">O'Higgins</option>
              <option value="Maule">Maule</option>
              <option value="Biobío">Biobío</option>
              <option value="Araucanía">Araucanía</option>
              <option value="Los Lagos">Los Lagos</option>
            </select>
          </div>
          <div class="flex items-end">
            <button
              id="clearFilters"
              type="button"
              class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            >
              Limpiar Filtros
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Hotspots Table -->
    <div class="bg-white shadow overflow-hidden sm:rounded-md">
      <div class="px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-medium text-gray-900">Lista de Hotspots</h3>
      </div>
      
      <ul class="divide-y divide-gray-200" id="hotspotsList">
        {hotspots?.map((hotspot) => (
          <li class="hotspot-item" data-status={hotspot.status} data-region={hotspot.region}>
            <div class="px-6 py-4 flex items-center justify-between">
              <div class="flex items-center space-x-4">
                <div class="flex-shrink-0">
                  {hotspot.hero_image_url ? (
                    <img
                      class="h-12 w-12 rounded-lg object-cover"
                      src={hotspot.hero_image_url}
                      alt={hotspot.name}
                    />
                  ) : (
                    <div class="h-12 w-12 rounded-lg bg-gray-200 flex items-center justify-center">
                      <svg class="h-6 w-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                      </svg>
                    </div>
                  )}
                </div>
                
                <div class="flex-1 min-w-0">
                  <div class="flex items-center space-x-2">
                    <h4 class="text-sm font-medium text-gray-900 truncate">{hotspot.name}</h4>
                    <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                      hotspot.status === 'published' 
                        ? 'bg-green-100 text-green-800'
                        : hotspot.status === 'draft'
                        ? 'bg-yellow-100 text-yellow-800'
                        : 'bg-gray-100 text-gray-800'
                    }`}>
                      {hotspot.status === 'published' ? 'Publicado' : 
                       hotspot.status === 'draft' ? 'Borrador' : 'Archivado'}
                    </span>
                  </div>
                  <div class="flex items-center mt-1 text-sm text-gray-500 space-x-4">
                    <span>{hotspot.city}, {hotspot.region}</span>
                    <span>•</span>
                    <span>{hotspot.population ? `${hotspot.population.toLocaleString()} hab.` : 'Sin datos'}</span>
                    <span>•</span>
                    <span>Providers: {hotspot.providers_count || 0}</span>
                  </div>
                  {hotspot.latitude && hotspot.longitude && (
                    <div class="mt-1 text-xs text-gray-400">
                      📍 {hotspot.latitude.toFixed(4)}, {hotspot.longitude.toFixed(4)}
                    </div>
                  )}
                </div>
              </div>
              
              <div class="flex items-center space-x-2">
                <a
                  href={`/admin/hotspots/${hotspot.id}`}
                  class="text-blue-600 hover:text-blue-900 text-sm font-medium"
                >
                  Ver
                </a>
                <a
                  href={`/admin/hotspots/${hotspot.id}/edit`}
                  class="text-gray-600 hover:text-gray-900 text-sm font-medium"
                >
                  Editar
                </a>
                <button
                  onclick={`deleteHotspot('${hotspot.id}', '${hotspot.name}')`}
                  class="text-red-600 hover:text-red-900 text-sm font-medium"
                >
                  Eliminar
                </button>
              </div>
            </div>
          </li>
        ))}
      </ul>
      
      {(!hotspots || hotspots.length === 0) && (
        <div class="text-center py-12">
          <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
          </svg>
          <h3 class="mt-2 text-sm font-medium text-gray-900">No hay hotspots</h3>
          <p class="mt-1 text-sm text-gray-500">Comience creando su primer hotspot.</p>
          <div class="mt-6">
            <a
              href="/admin/hotspots/create"
              class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700"
            >
              <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
              </svg>
              Nuevo Hotspot
            </a>
          </div>
        </div>
      )}
    </div>
  </div>
</AdminLayout>

<script>
  // Search and filter functionality
  const searchInput = document.getElementById('searchInput');
  const statusFilter = document.getElementById('statusFilter');
  const regionFilter = document.getElementById('regionFilter');
  const clearFiltersBtn = document.getElementById('clearFilters');
  const hotspotItems = document.querySelectorAll('.hotspot-item');

  function filterHotspots() {
    const searchTerm = searchInput.value.toLowerCase();
    const statusValue = statusFilter.value;
    const regionValue = regionFilter.value;

    hotspotItems.forEach(item => {
      const text = item.textContent.toLowerCase();
      const status = item.dataset.status;
      const region = item.dataset.region;

      const matchesSearch = !searchTerm || text.includes(searchTerm);
      const matchesStatus = !statusValue || status === statusValue;
      const matchesRegion = !regionValue || region === regionValue;

      if (matchesSearch && matchesStatus && matchesRegion) {
        item.style.display = '';
      } else {
        item.style.display = 'none';
      }
    });
  }

  searchInput?.addEventListener('input', filterHotspots);
  statusFilter?.addEventListener('change', filterHotspots);
  regionFilter?.addEventListener('change', filterHotspots);

  clearFiltersBtn?.addEventListener('click', () => {
    searchInput.value = '';
    statusFilter.value = '';
    regionFilter.value = '';
    filterHotspots();
  });

  // Delete hotspot function
  window.deleteHotspot = async (id, name) => {
    if (!confirm(`¿Está seguro de eliminar el hotspot "${name}"?`)) {
      return;
    }

    try {
      const response = await fetch(`/api/admin/hotspots/${id}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (response.ok) {
        window.location.reload();
      } else {
        alert('Error al eliminar el hotspot');
      }
    } catch (error) {
      console.error('Error:', error);
      alert('Error al eliminar el hotspot');
    }
  };
</script>