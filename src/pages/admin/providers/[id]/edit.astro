---
import AdminLayout from '../../../../layouts/AdminLayout.astro';
import { getAdminAuth, requireAdmin } from '../../../../lib/auth';
import { createSupabaseClient } from '../../../../lib/supabase';
import ProviderMultipleServicesForm from '../../../../components/admin/ProviderMultipleServicesForm';

// Protect this page - only admins can access
const auth = await getAdminAuth(Astro);
const user = requireAdmin(auth);

if (!user) {
  return Astro.redirect('/auth/login?redirect=/admin/providers');
}

const { id } = Astro.params;

if (!id) {
  return Astro.redirect('/admin/providers');
}

// Fetch provider data
const supabase = createSupabaseClient(Astro);
const { data: provider, error } = await supabase
  .from('providers')
  .select('*')
  .eq('id', id)
  .single();

if (error || !provider) {
  return Astro.redirect('/admin/providers?error=Provider not found');
}

// Prepare initial data for the form
const initialData = {
  company_name: provider.company_name,
  email: provider.email,
  phone: provider.phone,
  website: provider.website,
  whatsapp: provider.whatsapp,
  description: provider.description,
  address: provider.address,
  city: provider.city,
  region: provider.region,

  // Services (NEW)
  is_manufacturer: provider.is_manufacturer || false,
  is_service_provider: provider.is_service_provider || false,

  features: provider.features || {},

  years_experience: provider.years_experience,
  specialties: provider.specialties || [],
  services_offered: provider.services_offered || [],
  coverage_areas: provider.coverage_areas || [],
  price_range_min: provider.price_range_min,
  price_range_max: provider.price_range_max,
  price_per_m2_min: provider.price_per_m2_min,
  price_per_m2_max: provider.price_per_m2_max,
  llave_en_mano: provider.llave_en_mano || false,
  financing_available: provider.financing_available || false,

  tier: provider.tier,
  status: provider.status,

  // Editorial Flags (NEW)
  has_quality_images: provider.has_quality_images || false,
  has_complete_info: provider.has_complete_info || false,
  editor_approved_for_premium: provider.editor_approved_for_premium || false,
  has_landing_page: provider.has_landing_page || false,
  landing_slug: provider.landing_slug || '',

  featured_until: provider.featured_until,
  premium_until: provider.premium_until,
  featured_order: provider.featured_order,
  internal_rating: provider.internal_rating,

  admin_notes: provider.admin_notes || ''
};
---

<AdminLayout title={`Editar ${provider.company_name}`} user={user} currentPage="/admin/providers">
  <div class="p-6">
    <!-- Header -->
    <div class="mb-8">
      <div class="flex items-center justify-between mb-4">
        <a
          href={`/admin/providers/${id}`}
          class="text-gray-600 hover:text-gray-900 flex items-center"
        >
          <svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
          </svg>
          Volver al Proveedor
        </a>

        <!-- Provider Status Badge -->
        <span class={`px-3 py-1 text-sm font-medium rounded-full ${
          provider.status === 'active' ? 'bg-green-100 text-green-800' :
          provider.status === 'pending_review' ? 'bg-yellow-100 text-yellow-800' :
          provider.status === 'draft' ? 'bg-gray-100 text-gray-800' :
          provider.status === 'inactive' ? 'bg-gray-100 text-gray-600' :
          'bg-red-100 text-red-800'
        }`}>
          {provider.status === 'active' ? '‚úì Activo' :
           provider.status === 'pending_review' ? '‚è≥ Pendiente' :
           provider.status === 'draft' ? 'üìù Borrador' :
           provider.status === 'inactive' ? '‚è∏ Inactivo' :
           '‚úó Rechazado'}
        </span>
      </div>

      <h2 class="text-2xl font-bold text-gray-900">Editar Proveedor</h2>
      <p class="text-gray-600 mt-1">{provider.company_name}</p>

      <!-- Services Badges -->
      <div class="flex items-center space-x-2 mt-3">
        {provider.is_manufacturer && (
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
            üè≠ Fabricante
          </span>
        )}
        {provider.is_service_provider && (
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">
            üîß H&S
          </span>
        )}
        {!provider.is_manufacturer && !provider.is_service_provider && (
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
            ‚ö†Ô∏è Sin servicios definidos
          </span>
        )}
      </div>
    </div>

    <!-- Info Box -->}
    <div class="mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
      <div class="flex items-start">
        <svg class="w-5 h-5 text-blue-400 mt-0.5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
        </svg>
        <div>
          <p class="text-blue-800 font-medium">Modelo de Servicios M√∫ltiples</p>
          <p class="text-blue-700 text-sm mt-1">
            Este proveedor puede ofrecer m√∫ltiples servicios. Las features se mostrar√°n din√°micamente seg√∫n los servicios seleccionados.
          </p>
        </div>
      </div>
    </div>

    <!-- Form Component -->
    <ProviderMultipleServicesForm
      client:load
      mode="edit"
      providerId={id}
      initialData={initialData}
    />
  </div>
</AdminLayout>
