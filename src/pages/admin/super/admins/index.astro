---
import AdminLayout from '../../../../layouts/AdminLayout.astro';
import { getAdminAuth, requireSuperAdmin } from '../../../../lib/auth';
import { createSupabaseClient } from '../../../../lib/supabase';

// Protect this page - only super_admin can access
const auth = await getAdminAuth(Astro);
const user = requireSuperAdmin(auth);

if (!user) {
  return Astro.redirect('/auth/login?redirect=/admin/super/admins');
}

// Fetch all admin users
const supabase = createSupabaseClient(Astro);
const { data: adminUsers, error } = await supabase
  .from('profiles')
  .select('*')
  .in('role', ['admin', 'super_admin'])
  .order('created_at', { ascending: false });

if (error) {
  console.error('Error fetching admin users:', error);
}
---

<AdminLayout title="Gestión de Administradores" user={user} currentPage="/admin/super">
  <div class="p-6">
    <!-- Header -->
    <div class="flex justify-between items-center mb-8">
      <div>
        <h2 class="text-xl font-semibold text-gray-900">Administradores del Sistema</h2>
        <p class="text-gray-600 mt-1">Gestiona las cuentas de administrador de MODTOK</p>
      </div>
      <a 
        href="/admin/super/admins/create"
        class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors font-medium"
      >
        + Crear Administrador
      </a>
    </div>

    <!-- Admins List -->
    <div class="bg-white rounded-lg border border-gray-200 overflow-hidden">
      <div class="px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-medium text-gray-900">Lista de Administradores</h3>
      </div>
      
      {!adminUsers || adminUsers.length === 0 ? (
        <div class="p-8 text-center">
          <div class="text-gray-400 mb-4">
            <svg class="w-12 h-12 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.196-2.121L17 20zM9 20H4v-2a3 3 0 015.196-2.121L9 20zm8-10a3 3 0 11-6 0 3 3 0 016 0zM12 14a3 3 0 100-6 3 3 0 000 6z" />
            </svg>
          </div>
          <h3 class="text-lg font-medium text-gray-900 mb-2">No hay administradores</h3>
          <p class="text-gray-600 mb-4">Crea el primer administrador del sistema.</p>
          <a 
            href="/admin/super/admins/create"
            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700"
          >
            Crear Administrador
          </a>
        </div>
      ) : (
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Administrador
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Rol
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Estado
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Último Acceso
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Acciones
                </th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              {adminUsers.map((admin) => (
                <tr>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="flex items-center">
                      <div class="flex-shrink-0 h-10 w-10">
                        {admin.avatar_url ? (
                          <img class="h-10 w-10 rounded-full" src={admin.avatar_url} alt="" />
                        ) : (
                          <div class="h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center">
                            <span class="text-sm font-medium text-gray-700">
                              {admin.full_name?.charAt(0)?.toUpperCase() || admin.email.charAt(0).toUpperCase()}
                            </span>
                          </div>
                        )}
                      </div>
                      <div class="ml-4">
                        <div class="text-sm font-medium text-gray-900">
                          {admin.full_name || 'Sin nombre'}
                        </div>
                        <div class="text-sm text-gray-500">{admin.email}</div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                      admin.role === 'super_admin' 
                        ? 'bg-yellow-100 text-yellow-800' 
                        : 'bg-blue-100 text-blue-800'
                    }`}>
                      {admin.role === 'super_admin' ? 'Super Admin' : 'Admin'}
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                      admin.status === 'active' 
                        ? 'bg-green-100 text-green-800' 
                        : 'bg-red-100 text-red-800'
                    }`}>
                      {admin.status === 'active' ? 'Activo' : admin.status}
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    {admin.last_login_at 
                      ? new Date(admin.last_login_at).toLocaleDateString('es-ES')
                      : 'Nunca'
                    }
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <div class="flex space-x-2">
                      <a 
                        href={`/admin/super/admins/${admin.id}`}
                        class="text-blue-600 hover:text-blue-900"
                      >
                        Ver
                      </a>
                      {admin.id !== user.id && (
                        <button 
                          onclick={`confirmDelete('${admin.id}', '${admin.full_name || admin.email}')`}
                          class="text-red-600 hover:text-red-900"
                        >
                          Eliminar
                        </button>
                      )}
                    </div>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>
  </div>
</AdminLayout>

<script>
  function confirmDelete(adminId: string, adminName: string) {
    if (confirm(`¿Estás seguro que deseas eliminar al administrador "${adminName}"?`)) {
      // This would normally make an API call to delete the admin
      // For now, we'll just show an alert
      alert('Funcionalidad de eliminación pendiente de implementar');
    }
  }
</script>